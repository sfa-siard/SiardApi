package ch.enterag.utils.mime;

import java.io.*;
import ch.enterag.utils.*;

public class MimeTypesGenerator
{
  private static File fileJava = new File("src/ch/enterag/utils/mime/MimeTypes.java");
  private static final String sMAP_GENERATED_STARTS = "    // >> Generated by MimeTypesGenerator\r\n";
  private static final String sMAP_GENERATED_ENDS = "    // << Generated by MimeTypesGenerator\r\n";
  private String _sHeader = null;
  private String _sFooter = null;
  
  private String readLine(Reader rdr)
    throws IOException
  {
    String s = null;
    StringBuilder sb = new StringBuilder();
    int iRead = rdr.read();
    for (; (((char)iRead) != '\n') && (iRead != -1); iRead = rdr.read())
      sb.append((char)iRead);
    if (iRead != -1)
    {
      sb.append((char)iRead);
      s = sb.toString();
    }
    else
    {
      if (sb.length() > 0)
        s = sb.toString();
    }
    return s;
  } /* readLine */
  
  private void readHeaderAndFooter(Reader rdr)
    throws IOException
  {
    StringBuilder sbHeader = new StringBuilder();
    StringBuilder sbFooter = new StringBuilder();
    for (String sLine = readLine(rdr); 
         (sLine != null) && (!sLine.equals(sMAP_GENERATED_STARTS));
         sLine=readLine(rdr))
      sbHeader.append(sLine);
    for (String sLine = readLine(rdr); 
        (sLine != null) && (!sLine.equals(sMAP_GENERATED_ENDS));
        sLine=readLine(rdr));
    for (String sLine = readLine(rdr); 
        sLine != null;
        sLine=readLine(rdr))
      sbFooter.append(sLine);
    _sHeader = sbHeader.toString();
    _sFooter = sbFooter.toString();
  } /* readKeywordHeaderAndFooter */

  private void writeHeader(Writer wr)
    throws IOException
  {
    wr.write(_sHeader);
    wr.write(sMAP_GENERATED_STARTS);
  } /* writeEnumHeader */
  
  private void writeFooter(Writer wr)
    throws IOException
  {
    wr.write(sMAP_GENERATED_ENDS);
    wr.write(_sFooter);
  } /* writeFooter */
  
  private MimeTypesGenerator()
  {
    System.out.println("Generating MIME type extensions");
    System.out.println();
    
    try
    {
      Reader rdrJava = new FileReader(fileJava);
      readHeaderAndFooter(rdrJava);
      rdrJava.close();
      
      Writer wrJava = new FileWriter(fileJava);
      writeHeader(wrJava);
      /* mime.types.txt was downloaded from 
       * https://svn.apache.org/repos/asf/httpd/httpd/trunk/docs/conf/mime.types */
      int iMimeTypes = 0;
      InputStream isMimeTypes = MimeTypesGenerator.class.getResourceAsStream("mime.types.txt");
      Reader rdrMimeTypes = new InputStreamReader(isMimeTypes);
      for (String sLine = readLine(rdrMimeTypes); sLine != null; sLine = readLine(rdrMimeTypes))
      {
        sLine = sLine.trim();
        int iComment = sLine.indexOf('#');
        if (iComment >= 0)
          sLine = sLine.substring(0,iComment).trim();
        if (sLine.length() > 0)
        {
          int iTab = sLine.indexOf('\t');
          if (iTab >= 0)
          {
            String sMimeType = sLine.substring(0,iTab).trim();
            String sExtensions = sLine.substring(iTab+1).trim();
            String[] asExtension = sExtensions.split(" ");
            String sExtension = asExtension[0].trim();
            System.out.println(sMimeType+"|"+sExtension);
            wrJava.write("    _mapMimeTypeExtensions.put(\""+sMimeType+"\", \""+sExtension+"\");\r\n");
            iMimeTypes++;
          }
        }
      }
      rdrMimeTypes.close();
      writeFooter(wrJava);
      wrJava.close();
      System.out.println();
      System.out.println(String.valueOf(iMimeTypes)+" MIME type extensions generated.");
    }
    catch(IOException ie) { System.err.println(EU.getExceptionMessage(ie)); }
  }
  /**
   * @param args
   */
  public static void main(String[] args)
  {
    // TODO Auto-generated method stub
    new MimeTypesGenerator();

  }

}
